language: node_js
sudo: required

services:
  - docker

node_js:
  - "6.10.2"
  
cache:
  yarn: true
  directories:
  - node_modules
  
env:
  global:
  - PROJECT="Jazz-UI"
  - ROLE="WebUI"
  - PACKAGE_VERSION="v5.3.0.${TRAVIS_BUILD_NUMBER}"
  - DOCKER_NS="se-rem-test"

before_script:
  - export ARTIFACT_NAME="${PROJECT}-${ROLE}-${TRAVIS_BRANCH}-${PACKAGE_VERSION}.zip"
  - export TAG=`echo "$PROJECT-$ROLE:$TRAVIS_BRANCH-$PACKAGE_VERSION" | tr '[:upper:]' '[:lower:]'`
  - export TAG_LATEST=`echo "$PROJECT-$ROLE:$TRAVIS_BRANCH-latest" | tr '[:upper:]' '[:lower:]'`
  - export REMOTE_TAG=$DOCKER_REGISTRY/$DOCKER_NS/$TAG
  - export REMOTE_TAG_LATEST=$DOCKER_REGISTRY/$DOCKER_NS/$TAG_LATEST
  - export ARTIFACT_NAME="${PROJECT}-${ROLE}-${TRAVIS_BRANCH}-${PACKAGE_VERSION}.zip"
 
script:
  - yarn run build-test
  - echo -n "${PACKAGE_VERSION}" > build/version.txt

before_deploy:
  - cp compose-template.yml build/
  - cd build && zip -r ../${ARTIFACT_NAME} ./ && cd ..
  - docker build -t $TAG .
#  - echo -n "${PACKAGE_VERSION}" > version.txt
#  - zip -r --exclude=*node_modules* /tmp/${ARTIFACT_NAME} ./
  - 'curl -o upload.sh -H "Authorization: token ${GITHUB_TOKEN}" ${GITHUB_UPLOAD_SCRIPT}'
  - chmod a+x ./upload.sh
  
  - IMAGEID=$(docker images $TAG -q)
  - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD" $DOCKER_REGISTRY
  - docker tag $IMAGEID $REMOTE_TAG
  - docker tag $IMAGEID $REMOTE_TAG_LATEST
  - docker image ls
  - ls -la
  
deploy:
- provider: script
  skip_cleanup: true
  on:
    all_branches: true
  script:
    - ./upload.sh ${ARTIFACT_NAME} ${PROJECT} ${TRAVIS_BRANCH} ${ROLE} ${PACKAGE_VERSION} ${OSS_BUCKET} ${OSS_KEY} ${OSS_SECRET} && docker push $REMOTE_TAG && docker push $REMOTE_TAG_LATEST && curl -X POST -u "${JENKINS_USER}:${JENKINS_TOKEN}" "${JENKINS_HOST}/job/${PROJECT}/buildWithParameters?environment=dev&version=latest&branch=${TRAVIS_BRANCH}"
